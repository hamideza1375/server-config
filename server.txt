parsed.com

#install pip
curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
Right click in file and select Python rancher 3


#StartConfig
ssh -p 2233 root@162.19.217.1
passwd 'newpasword'
apt update
apt upgrade
reboot = 'restart server'
adduser newUser
adduser newUser sudo
nano /etc/ssh/sshd_config 'change Port && PermitRootLogin no'
service sshd restart
sudo service sshd restart




#live connection
screen





#Firewall
sudo hostnamectl set-hostname 'newhostname'
sudo nano /etc/hosts && 'edit 127.0.1.1 VMID-5084.nrp.co VMID-5084 to newHostName newHostName'
sudo reboot
sudo apt install ufw
sudo ufw enable
sudo ufw default deny 21
sudo ufw default allow 21
sudo ufw default allow outgoing
sudo ufw allow ssh ='allow port 22'
sudo ufw allow 2233
sudo ufw allow http
sudo ufw allow https
sudo uff allow ftp = 'allow port 21'
sudo ufw status
sudo apt install sshguard




#Node
Go to = https://github.com/nodesource/distributions/blob/master/README.md
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - &&\
sudo apt-get install -y nodejs  '= node.js 18 for ubuntu'





#MongoDB
sudo apt install mongodb
sudo service mongodb status
sudo service mongodb start
sudo service mongodb stop
sudo service mongodb restart
mongod -v
sudo ufw allow 27017 'اگه از دیتا بیس خارج از سیستم استفاده کردین باید پورت ۲۷۰۱۷ که برای مونگو دیبی هست رو باز'



#FTP SFTP
Go to seeing > sharing and enable file sharing and remote login
brew install tnftp 'اگه لازم شد این پکیج و پکیج زیر رو نصب کن'
brew install sftp 'شاید پکیجی با این نام وجو نداشته باشد'
sftp -P 2233 root@162.19.217.1
sftp -P 2233 root@162.19.217.1:/home
put a.txt
put -r a.txt 'upload folder as local to remote'
get a.txt = 'send file in remote to local'
rm a.txt = ''

Pwd = 'remote'
lpwd = 'local'
ls = 'remote'
lls = 'local'
cd
lcd

echo put filename | sftp -P 2233 root@162.19.217.1
echo put -r foldername | sftp -P 2233 root@162.19.217.1
echo delete -r js_project2 | sftp -P 2233 rootd@162.19.217.1
echo mput index.html salam.txt | sftp -P 2233 root@162.19.217.1 'change name index.html to salam.txt and upload'



#Pm2
sudo npm i -g pm2
pm2 start app.js
pm2 status
pm2 restart id
pm2 stop 1
pm2 delete 0
pm2 logs
pm2 flush
pm2 monit
pm2 start app.js -n helloworld
pm2 startup && sudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u (userName) --hp /home/(userName)
pm2 startup = 'auto boot'
pm2 save
pm2 unstartup systemd






#Nginx
sudo apt install nginx
service nginx status
/var/www/html =
'برای ریکت فقط کافی هست که فایل پروزه خروجی گرفته شده رو توی این مسیر قرار بدیقبلش فایل index.nginx-debian.htmlرو از این مسیر پاک کن
sudo nano /etc/nginx/sites-available/default
location / { try_files $uri /index.html; }
sudo nginx -t
sudo service nginx restart
Only set folder root in /var/www/*




#Nginx-Multi-Domin
sudo mkdir -p /var/www/mytest1.com/public_html
sudo chmod 777 /var/www/mytest1.com/public_html
sudo echo "Welcome to mytest1.com!" > /var/www/mytest1.com/public_html/index.html
sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/mytest1.com
Edit /etc/nginx/sites-available/mytest1.com  = "
root /var/www/mytest1.com/public_html
server_name mytest1.com www.mytest1.com;"
sudo service nginx restart



#Nginx-create-Domin2
sudo mkdir -p /var/www/mytest2.com/public_html
sudo chmod 777 /var/www/mytest2.com/public_html
sudo echo "Welcome to mytest1.com!" > /var/www/mytest2.com/public_html/index.html
sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/mytest2.com
sudo nano /etc/nginx/sites-available/mytest2.com =
Edit
 listen 80 default_server;
  listen [::]:80 default_server;
To
 listen 80;
  listen [::]:80;
&&
server_name mytest2.com www.mytest2.com;"
sudo service nginx restart

(symbolic Link)
در این مرحله یک لینک نمادین از دایرکتوری sites-available در دایرکتوری sites-enabled ایجاد خواهیم نمود که عملا وب سرور Nginx آن را فراخوانی می نماید:

sudo ln -s /etc/nginx/sites-available/mytest1.com /etc/nginx/sites-enabled/

sudo ln -s /etc/nginx/sites-available/mytest2.com /etc/nginx/sites-enabled/
حالا لینک نمادین را از سروربلاک اصلی می بایست حذف نماییم:

sudo rm /etc/nginx/sites-enabled/default
حالا Nginx را ریست می کنیم:









#Nginx-Set-Nod
location / {
	# First attempt to serve request as file, then
	# as directory, then fallback to displaying a 404
	proxy_pass http://localhost:3000;
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection 'upgrade';
	proxy_set_header Host $host;
	proxy_cache_bypass $http_upgrade;
}





#
 Original = try_files $uri /index.html;
 Or
 try_files $uri $uri/ /index.html?/$request_uri; 
 Or
 try_files $uri $uri/ /index.html





#GetDomin
برای دریافت دامنه ابتدا باید در سایت ایرلینک ثبت نام کنید و شناسه ی ایرلینک را دریافت کنید و مدیریت رابط های مجاز را روی گزینه ی خودم و
 نمایندگان قراردهید







#SSL
Go to 'https://virgool.io/iran-react-community/%D8%A7%D8%B3%D8%AA%D9%82%D8%B1%D8%A7%D8%B1-%D9%BE%D8%B1%D9%88%DA%98%D9%87-%D9%87%D8%A7%DB%8C-react-%D8%A8%D8%A7-%D8%A7%D8%B3%D8%AA%D9%81%D8%A7%D8%AF%D9%87-%D8%A7%D8%B2-nginx-%D9%88-%DA%AF%D9%88%D8%A7%D9%87%DB%8C-ssl-g0yx78u6grno'

sudo apt install letsencrypt

$ sudo letsencrypt certonly -a webroot --webroot-path=/var/www/html -d <your_domain> -d www.<your_domain>
$ sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048

$ sudo nano /etc/nginx/snippets/ssl-params.conf
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH"
ssl_ecdh_curve secp384r1;
ssl_session_cache shared:SSL:10m;
ssl_session_tickets off;
ssl_stapling on;
ssl_stapling_verify on;
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;
add_header Strict-Transport-Security "max-age=63072000; includeSubdomains"
add_header X-Frame-Options DENY;
add_header X-Content-Type-Options nosniff;
ssl_dhparam /etc/ssl/certs/dhparam.pem;


$ sudo nano /etc/nginx/sites-available/default
server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name <your_domain> www.<your_domain>;
  return 301 https://$server_name$request_uri;
}
server {
  listen 443 ssl http2 default_server;
  listen [::]:443 ssl http2 default_server;
  server_name <your_domain>;
  ssl_certificate /etc/letsencrypt/live/<your_domain>/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/<your_domain>/privkey.pem;
  include snippets/ssl-params.conf;
  location / {
   # reverse proxy for node server
    proxy_pass http://localhost:5000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }
  location ~ /.well-known {
    allow all;
  }
}




